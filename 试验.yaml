port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true

external-controller: 127.0.0.1:9097
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  # geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb'
  asn: 'https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: mixed
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 160426.alidns.com
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://160426.alidns.com/dns-query#h3=true
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true

# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 6 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'https://www.gstatic.com/generate_204', interval: 6}}

# 锚点 - 节点订阅
proxy-providers: 
  EFC:
    url: 'https://vase.bengalj.com/queue/list?token=f5a17a2e7ca02f44ffaa0df75a7485a6'
    <<: *NodeParam
    path: './proxy_providers/EFC.yaml'
    override:
      additional-prefix: "[EFC] " # 为订阅节点添加机场名称前缀
  citruslab:
    url: 'https://citru.pro/api/v1/client/subscribe?token=5221fba50925473405d99afca80c7b71&flag=meta'
    <<: *NodeParam
    path: './proxy_providers/citruslab.yaml'
    override:
      additional-prefix: "[citruslab] " # 为订阅节点添加机场名称前缀
  52niu:
    url: 'https://66c4d4.brighthorizon.cc/api/v1/client/subscribe?token=7b6db52e41f1c99695fad4a10061ce28'
    <<: *NodeParam
    path: './proxy_providers/52niu.yaml'
    override:
      additional-prefix: "[52niu] " # 为订阅节点添加机场名称前缀
    exclude-filter: "HOME🏠:https://吾爱妞.com/|[特殊地区及海外用户]"

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong|HKBGP)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore|SGBGP)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan|TWBGP)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan|JPBGP)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}

# 策略组
proxy-groups: 
  - {name: 🎰 游戏选择, type: select, include-all-providers: true, filter: *FilterGame, proxies: [DIRECT, 🌐 全球选择]}
  - {name: 🌐 全球选择, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: ❔ AI, type: select, proxies: [🇯🇵 日本策略, 🇸🇬 新国策略, 🇭🇰 香港策略, 🇺🇸 美国策略, 🇨🇳 台湾策略]}
  - {name: 📺 BiliBili, type: select, proxies: [DIRECT, 🇭🇰 香港策略, 🇨🇳 台湾策略]}
  - {name: 📟️ Telegram, type: select, proxies: [🇸🇬 新国策略, 🇭🇰 香港策略]}
  - {name: 🍟 Emby, type: select, proxies: [🌐 全球选择, DIRECT, 🇭🇰 香港策略, 🇨🇳 台湾策略, 🇯🇵 日本策略, 🇸🇬 新国策略]}
  - {name: ✨️ 兜底策略, type: select, proxies: [🇭🇰 香港策略, 🇨🇳 台湾策略, 🇯🇵 日本策略, 🇸🇬 新国策略, 🇺🇸 美国策略, 🇩🇪 德国策略, DIRECT]}

  - {name: 🇭🇰 香港策略, type: select, proxies: [⏱香港时延优选策略组, 🎛香港负载均衡策略组]}
  - {name: 🇸🇬 新国策略, type: select, proxies: [⏱新国时延优选策略组, 🎛新国负载均衡策略组]}
  - {name: 🇨🇳 台湾策略, type: select, proxies: [⏱台湾时延优选策略组, 🎛台湾负载均衡策略组]}
  - {name: 🇯🇵 日本策略, type: select, proxies: [⏱日本时延优选策略组, 🎛日本负载均衡策略组]}
  - {name: 🇺🇸 美国策略, type: select, proxies: [⏱美国时延优选策略组, 🎛美国负载均衡策略组]}
  - {name: 🇩🇪 德国策略, type: select, proxies: [⏱德国时延优选策略组, 🎛德国负载均衡策略组]}

# 时延优选策略组
  - {name: ⏱香港时延优选策略组, <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱新国时延优选策略组, <<: *UrlTest, filter: *FilterSG}
  - {name: ⏱台湾时延优选策略组, <<: *UrlTest, filter: *FilterTW}
  - {name: ⏱日本时延优选策略组, <<: *UrlTest, filter: *FilterJP}
  - {name: ⏱美国时延优选策略组, <<: *UrlTest, filter: *FilterUS}
  - {name: ⏱德国时延优选策略组, <<: *UrlTest, filter: *FilterDE}

# 负载均衡策略组
  - {name: 🎛香港负载均衡策略组, <<: *LoadBalance, filter: *FilterHK}
  - {name: 🎛新国负载均衡策略组, <<: *LoadBalance, filter: *FilterSG}
  - {name: 🎛台湾负载均衡策略组, <<: *LoadBalance, filter: *FilterTW}
  - {name: 🎛日本负载均衡策略组, <<: *LoadBalance, filter: *FilterJP}
  - {name: 🎛美国负载均衡策略组, <<: *LoadBalance, filter: *FilterUS}
  - {name: 🎛德国负载均衡策略组, <<: *LoadBalance, filter: *FilterDE}

# 订阅规则
rule-providers:
  Lan:
    <<: *RuleProviders
    path: './rules/Lan.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Lan/Lan.yaml'

  Direct:
    <<: *RuleProviders
    path: './rules/Direct.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Direct.yaml'

  Proxy:
    <<: *RuleProviders
    path: './rules/Proxy.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Proxy.yaml'

  ChinaDownloadCDN:
    <<: *RuleProviders
    path: './rules/ChinaDownloadCDN.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/ChinaDownloadCDN.yaml'

  InternationalDownloadCDN:
    <<: *RuleProviders
    path: './rules/InternationalDownloadCDN.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/InternationalDownloadCDN.yaml'

  AI:
    <<: *RuleProviders
    path: './rules/AI.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/AI.yaml'

  TikTok:
    <<: *RuleProviders
    path: './rules/TikTok.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/TikTok.yaml'

  Game:
    <<: *RuleProviders
    path: './rules/Game.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Game.yaml'

  Steam:
    <<: *RuleProviders
    path: './rules/Steam.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Steam/Steam.yaml'

  Netflix:
    <<: *RuleProviders
    path: './rules/Netflix.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Netflix/Netflix.yaml'

  BiliBili:
    <<: *RuleProviders
    path: './rules/BiliBili.yaml'
    url: 'https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/BiliBili/BiliBili.yaml'

  Emby:
    <<: *RuleProviders
    path: './rules/Emby.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/EmbyServer.yaml'

  iCloudChina:
    <<: *RuleProviders
    path: './rules/iCloudChina.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/iCloudChina.yaml'

  ApplePushNotificationService:
    <<: *RuleProviders
    path: './rules/ApplePushNotificationService.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/ApplePushNotificationService.yaml'

  AppleSoftwareUpdates:
    <<: *RuleProviders
    path: './rules/AppleSoftwareUpdates.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/AppleSoftwareUpdates.yaml'

  Google:
    <<: *RuleProviders
    path: './rules/Google.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Google/Google.yaml'

  Telegram:
    <<: *RuleProviders
    path: './rules/Telegram.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Telegram.yaml'

  ESET_China:
    <<: *RuleProviders
    path: './rules/ESET_China.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/ESET_China.yaml'
  
  Microsoft:
    <<: *RuleProviders
    path: './rules/Microsoft.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Microsoft/Microsoft.yaml'

# 规则指向
rules:
  - DOMAIN-SUFFIX, mefun.org, DIRECT
  - DOMAIN, shenmi.link, 🍟 Emby
  - DOMAIN, 789.123456.al, 🍟 Emby
  - DOMAIN, emby-mica-us-v1.mius.uk, 🇺🇸 美国策略
  - RULE-SET, Lan, DIRECT
  - RULE-SET, Direct, DIRECT
  - RULE-SET, Proxy, ✨️ 兜底策略
  - RULE-SET, ChinaDownloadCDN, DIRECT
  - RULE-SET, InternationalDownloadCDN, DIRECT
  - RULE-SET, AI, ❔ AI
  - RULE-SET, TikTok, 🌐 全球选择
  - RULE-SET, Steam, ✨️ 兜底策略
  - RULE-SET, Game, 🎰 游戏选择
  - RULE-SET, Netflix, ✨️ 兜底策略
  - RULE-SET, BiliBili, 📺 BiliBili
  - RULE-SET, Emby, 🍟 Emby
  - RULE-SET, iCloudChina, DIRECT
  - RULE-SET, ApplePushNotificationService, DIRECT
  - RULE-SET, AppleSoftwareUpdates, DIRECT
  - RULE-SET, Google, ✨️ 兜底策略
  - RULE-SET, Telegram, 📟️ Telegram
  - RULE-SET, ESET_China, DIRECT
  - GEOIP, CN, DIRECT
  - MATCH, ✨️ 兜底策略